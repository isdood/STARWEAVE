import Config

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
config :starweave_web, StarweaveWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {0, 0, 0, 0}, port: String.to_integer(System.get_env("PORT") || "4000")],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "sP8oXL2+YxCSDdwbh6jRknLQU/6HHzvo9txPubOG3oGuDS871GftAk3qs3lhIHcq",
  watchers: [
    npm: [
      "run",
      "watch",
      cd: Path.expand("../apps/starweave_web/assets", __DIR__)
    ]
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Configure gRPC for development
config :grpc,
  start_server: true,
  log_level: :debug,
  telemetry_enabled: true

# Configure gRPC client with development settings
config :starweave_web, StarweaveWeb.GRPC.PatternClient,
  endpoint: "localhost:50052",
  ssl: false,
  adapter: GRPC.Client.Adapters.Gun,
  connect_timeout: 10_000,
  recv_timeout: 30_000,
  retry_timeout: 1_000,
  retry_max: 5,
  adapter_opts: [
    transport_opts: [
      protocols: [:http2],
      connect_timeout: 10_000,
      recv_timeout: 30_000,
      retry_timeout: 1_000,
      retry_max: 5,
      http2_opts: [
        keepalive: 30_000
      ],
      verify: :verify_none
    ]
  ]

# Watch static and templates for browser reloading.
config :starweave_web, StarweaveWeb.Endpoint,
  live_reload: [
    web_console_logger: true,
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg|ico|webmanifest)$",
      ~r"lib/starweave_web/(controllers|live|components|router)/?.*\.(ex|heex)$"
    ]
  ]

# gRPC client configuration
config :grpc,
  # We're only using the client in this app
  start_server: false,
  # Default port for our Python gRPC server
  port: 50052,
  # Default host for our Python gRPC server
  host: "localhost",
  # These settings can be overridden in config/runtime.exs for different environments
  # See https://hexdocs.pm/grpc/readme.html#configuration for more options
  # Using Gun as the HTTP/2 client
  adapter: GRPC.Adapter.Gun,
  adapter_opts: %{
    # 5 second connection timeout
    connect_timeout: 5_000,
    # 1 second between retries
    retry_timeout: 1_000,
    # Number of retry attempts
    retry_attempts: 3
  }

# Configuration for our PatternService client
config :starweave_web, StarweaveWeb.GRPC.PatternClient,
  # These settings can be overridden per environment
  channel_opts: [
    host: "localhost",
    port: 50052,
    # For development only, use proper credentials in production
    cred: :this_is_insecure,
    adapter_opts: %{
      http2_opts: %{
        # Additional HTTP/2 options can be specified here
        # See https://ninenines.eu/docs/en/gun/2.0/manual/gun/
        connect_timeout: 5_000,
        retry_timeout: 1_000,
        retry_attempts: 3
      }
    }
  ]

# Enable dev routes for dashboard and mailbox
config :starweave_web, dev_routes: true

# Do not include metadata nor timestamps in development logs
config :logger, :default_formatter, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

config :phoenix_live_view,
  # Include debug annotations and locations in rendered markup.
  # Changing this configuration will require mix clean and a full recompile.
  debug_heex_annotations: true,
  debug_attributes: true,
  # Enable helpful, but potentially expensive runtime checks
  enable_expensive_runtime_checks: true
